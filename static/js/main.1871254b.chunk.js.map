{"version":3,"sources":["App.js","index.js"],"names":["App","useState","msg","toggleMsg","newtodo","addNewTodo","id","text","done","todos","todoList","handleSubmit","e","preventDefault","Date","now","target","reset","useEffect","length","onSubmit","className","placeholder","type","onChange","value","map","item","onClick","stopPropagation","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAEe,SAASA,IAAO,IAAD,EACJC,oBAAS,GADL,mBACtBC,EADsB,KACjBC,EADiB,OAEDF,mBAAS,IAFR,mBAExBG,EAFwB,KAEfC,EAFe,OAIHJ,mBAAS,CAClC,CAACK,GAAI,IAAKC,KAAM,uBAAwBC,MAAM,GAC9C,CAACF,GAAI,IAAKC,KAAM,wBAAyBC,MAAM,GAC/C,CAACF,GAAI,IAAKC,KAAM,mBAAoBC,MAAM,KAPd,mBAItBC,EAJsB,KAIfC,EAJe,KAWvBC,EAAe,SAACC,GACrBA,EAAEC,iBACc,KAAZT,IACJM,EAAS,CAAC,CAACJ,GAAIQ,KAAKC,MAAOR,KAAMH,EAASI,MAAM,IAAxC,mBAAmDC,KAE3DG,EAAEI,OAAOC,QACTZ,EAAW,MASZ,OAFAa,qBAAU,WAFTT,EAAMU,OAAS,EAAIhB,GAAU,GAASA,GAAU,KAEpB,CAACM,IAG7B,sBAAMW,SAAUT,EAAhB,SACC,2BAAUU,UAAU,MAApB,UACC,mCACC,sBAAMA,UAAU,OAChB,sBAAMA,UAAU,OAChB,sBAAMA,UAAU,UAEjB,uBACCC,YAAY,YACZC,KAAK,OACLC,SAAU,SAACZ,GACVP,EAAWO,EAAEI,OAAOS,UAItB,uBAAOF,KAAK,SAASE,MAAM,MAAML,SAAUT,IAC3C,sBAAKU,UAAU,OAAf,UACC,6BAEEZ,EAAMiB,KAAI,SAACC,GAAD,OACV,qBACCN,UAAWM,EAAKnB,KAAO,OAAS,OAEhCoB,QAAS,WACRD,EAAKnB,KAAQmB,EAAKnB,MAAO,EAAUmB,EAAKnB,MAAO,EAC/CE,EAAS,YAAID,KALf,UAQC,sBACCmB,QAAS,SAAChB,GACTA,EAAEiB,kBACFnB,EAASD,EAAMqB,QAAO,SAACrB,GAAD,OAAWA,EAAMH,KAAOqB,EAAKrB,QAHrD,eAQCqB,EAAKpB,OAdDoB,EAAKrB,SAkBZJ,EAAM,qBAAKI,GAAG,MAAR,8CAAuD,aChEnEyB,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,W","file":"static/js/main.1871254b.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport \"./App.css\";\nexport default function App() {\n const [msg, toggleMsg] = useState(true);\n var [newtodo, addNewTodo] = useState(\"\");\n // Predefined todos\n const [todos, todoList] = useState([\n  {id: 789, text: \"Take Gwen for a date\", done: false},\n  {id: 456, text: \"Buy eggs for Aunt may\", done: false},\n  {id: 123, text: \"Make a todo list\", done: true},\n ]);\n\n // Handle Form Submit aka Add New Item\n const handleSubmit = (e) => {\n  e.preventDefault(); //Prevent Page refresh\n  if (newtodo === \"\") return;\n  todoList([{id: Date.now(), text: newtodo, done: false}, ...todos]);\n  /* Clear Input fields */\n  e.target.reset();\n  addNewTodo(\"\");\n };\n\n // Display Empty Message\n const handleMsg = () => {\n  todos.length > 0 ? toggleMsg(false) : toggleMsg(true);\n };\n useEffect(() => handleMsg(), [todos]);\n\n return (\n  <form onSubmit={handleSubmit}>\n   <fieldset className=\"App\">\n    <legend>\n     <span className=\"rd\"></span>\n     <span className=\"yl\"></span>\n     <span className=\"gn\"></span>\n    </legend>\n    <input\n     placeholder=\"Type here\"\n     type=\"text\"\n     onChange={(e) => {\n      addNewTodo(e.target.value);\n     }}\n    />\n\n    <input type=\"submit\" value=\"ADD\" onSubmit={handleSubmit} />\n    <div className=\"list\">\n     <ul>\n      {/* Display todo */}\n      {todos.map((item) => (\n       <li\n        className={item.done ? \"done\" : \"left\"}\n        key={item.id}\n        onClick={() => {\n         item.done ? (item.done = false) : (item.done = true);\n         todoList([...todos]);\n        }}\n       >\n        <span\n         onClick={(e) => {\n          e.stopPropagation();\n          todoList(todos.filter((todos) => todos.id !== item.id));\n         }}\n        >\n         X\n        </span>\n        {item.text}\n       </li>\n      ))}\n     </ul>\n     {msg ? <div id=\"msg\">looks empty :( You can fix that!</div> : null}\n    </div>\n   </fieldset>\n  </form>\n );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n <React.StrictMode>\n  <App />\n </React.StrictMode>,\n document.getElementById(\"root\")\n);\n"],"sourceRoot":""}